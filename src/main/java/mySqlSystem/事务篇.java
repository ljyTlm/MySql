package mySqlSystem;

public class 事务篇 {
}
/**
 *      什么是事务？
 *          事务是一个逻辑执行模块，要么都做，要么都不做
 *      事务的目的：
 *          保证数据的正确
 *      如何保证数据的正确？
 *          1.原子性
 *              不可分割 都做 都不做
 *          2.持久性
 *              一旦修改永久保存
 *          3.一致性
 *              从一个一致状态 转移到另外一个一致状态
 *          4.隔离性
 *              事务之间互不干扰
 *          符合以上四点那么就可以保证数据的正确性
 *      我们着重研究原子性和隔离性
 *          1.原子性
 *              都做---加锁 都不做---回滚
 *          2.隔离性
 *              有四大隔离级别
 *                  1.读 未提交
 *                  2.读 已提交
 *                  3.可重复读
 *                  4.串行
 *              数据库默认级别是 可重复读
 *              内部原理是这样的 我们用一个事务来说明
 *                  1.事务开启
 *                  2.读数据
 *                      事务本身有一个事务版本号
 *                      数据也有一个历史版本号
 *                      历史版本号 > 事务版本号
 *                      说明这个数据让别的事务动过了
 *                      我们不能要 因为有一个定义：
 *                          其他为提交的事务对当前事务可不见
 *                      历史版本号 <= 事务版本号
 *                      第一种情况：说明这个数据是当期事务开启之前就
 *                                已经提交完毕的数据可以读，
 *                                如果没有发生修改 这个数据用远不会变
 *                      第二种情况：这个数据已经改过了，不过在自己读之前
 *                                自己又改了一次，而这个数据的版本号
 *                                是自己本身所以这个值会变 会变成由自己
 *                                改成的最新值
 *                  3.改数据
 *                      先获取锁，然后在最新的已提交事务的值上进行更新
 *                      之后的结果，会影响读取的值
 *                  4.提交
 *                      持久化更新， 释放所有的锁
 * */