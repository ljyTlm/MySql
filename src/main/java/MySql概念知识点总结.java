public class MySql概念知识点总结 {
    public static void main(String[] args) {

    }
}
/*
    1.数据库设计守则
        （1）三大范式
            1.列不可分     基础单元
            2.部分函数依赖  不能分成多个类
            3.传递函数依赖  不能存在传递依赖
        （2）索引
            索引是数据库中对表的列或多个列的值进行排序的数据结构
            底层使用的是B+树（n叉树）特点就是节点包含父节点
            1.主键索引
            2.唯一索引
            3.聚集索引
            4.非聚集索引
            优点：加快查找速度
            缺点：需要动态维护
        （3）事务
            1.原子性
                一个事务要么都执行 要么都不执行 也就是失败会回滚
            2.隔离性
                当此事务对当前表操作时，当前表对其他事务不可见
            3.一致性
                事务操作后的数据整体的从一个一致状态转到另外一个一致状态
            4.持久性
                如果事务成功执行，那么对数据的修改是永久性的
            5.事务并发问题
                1.幻读 因为增加和删除读的记录条数不一样
                2.脏读 读取的值不是最新的（另外的一个事务未提交）
                3.不可重复读 因为修改两次读取数据的值不一样
                3.更新覆盖 顾名思义
            6.隔离级别
                1.读 未提交
                2.读 已提交
                3.读 不可见
                4.序列化 只允许事务串行运行
    2.数据库原理
        锁广义上两类：
            悲观锁：完全依赖数据库锁实现，使用（可重复读）隔离级别
                   效率低下
            乐观锁：大部分基于版本控制实现，通过时间戳的方式 一般认为数据不会
                   发生冲突 只有在数据提交更新的时候才会比较 但是存在冲突！！！
        具体锁：
            共享锁：比人可以读 但是不能改 需要使用LOCK IN SHARE MODE
            排他锁：别人什么都不能干
            表  锁：加锁快 开销小 不会造成死锁
            页  锁：折中的方案 会锁住一小组数据 会造成死锁
            行  锁：开销大 加锁慢 会发生死锁 但是对并发的支持好
        数据库引擎：
            1.MyISAM
                是mysql5.5之前数据库的默认引擎，性能极佳，但是不支持事务处理
            2.InnoDB
                InnoDB最大的特色就是支持AICD兼容的事务处理
            综合对比：
                        MyISAM        InnoDB
                外键：   不支持         支持
                crud：  select优       delete优
                表行数：  保存           不保存
                索引：    B+树          B+树
        慢查询日志：
            他会保存时间超过阈值的sql语句 默认10秒
        sql语句优化：
            1.一次insert多值
            2.避免在where语句中使用!=或<>操作符 和null值判断 不然引擎会放弃索引 进行全表扫描
            3.嵌套查询 子查询可以用join代替
            4.用in代替or
            5.select语句中避免使用* 用什么查什么

    1.ORDER BY 如果未指定asc和desc 默认从小到大升序排列 asc







 */